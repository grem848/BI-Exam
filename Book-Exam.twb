<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook original-version='18.1' source-build='2020.3.2 (20203.20.1018.2303)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='metacritic_reviews-vgsales-combined' inline='true' name='federated.1ghzhzy025up6h10nf53y0heed5n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='metacritic_reviews-vgsales-combined' name='textscan.0fx6kn705jz9rc1485dyu05w920h'>
            <connection class='textscan' directory='C:/Users/Andreas Heick Laptop/Documents/VisualStudio Projects/SOFT - 2 Semester/BI/BI-Exam' filename='metacritic_reviews-vgsales-combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0fx6kn705jz9rc1485dyu05w920h' name='metacritic_reviews-vgsales-combined.csv' table='[metacritic_reviews-vgsales-combined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='da_DK' separator=';'>
            <column datatype='integer' name='Sales_Rank' ordinal='0' />
            <column datatype='string' name='Game' ordinal='1' />
            <column datatype='string' name='Platform' ordinal='2' />
            <column datatype='integer' name='Release_Year' ordinal='3' />
            <column datatype='string' name='Genre' ordinal='4' />
            <column datatype='string' name='Publisher' ordinal='5' />
            <column datatype='real' name='NA_Sales' ordinal='6' />
            <column datatype='real' name='EU_Sales' ordinal='7' />
            <column datatype='real' name='JP_Sales' ordinal='8' />
            <column datatype='real' name='Other_Sales' ordinal='9' />
            <column datatype='real' name='Global_Sales' ordinal='10' />
            <column datatype='string' name='Critic_Name' ordinal='11' />
            <column datatype='integer' name='Score' ordinal='12' />
            <column datatype='date' name='Review_Date' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0fx6kn705jz9rc1485dyu05w920h' name='metacritic_reviews-vgsales-combined.csv' table='[metacritic_reviews-vgsales-combined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='da_DK' separator=';'>
            <column datatype='integer' name='Sales_Rank' ordinal='0' />
            <column datatype='string' name='Game' ordinal='1' />
            <column datatype='string' name='Platform' ordinal='2' />
            <column datatype='integer' name='Release_Year' ordinal='3' />
            <column datatype='string' name='Genre' ordinal='4' />
            <column datatype='string' name='Publisher' ordinal='5' />
            <column datatype='real' name='NA_Sales' ordinal='6' />
            <column datatype='real' name='EU_Sales' ordinal='7' />
            <column datatype='real' name='JP_Sales' ordinal='8' />
            <column datatype='real' name='Other_Sales' ordinal='9' />
            <column datatype='real' name='Global_Sales' ordinal='10' />
            <column datatype='string' name='Critic_Name' ordinal='11' />
            <column datatype='integer' name='Score' ordinal='12' />
            <column datatype='date' name='Review_Date' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;da&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;kr&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;da_DK&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales_Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales_Rank]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Sales_Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Game</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Game]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Game</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDA_RDK' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Platform</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Platform]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Platform</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDA_RDK' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Release_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Release_Year]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Release_Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Genre</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Genre]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Genre</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDA_RDK' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Publisher</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Publisher]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Publisher</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDA_RDK' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NA_Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NA_Sales]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>NA_Sales</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EU_Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EU_Sales]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>EU_Sales</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JP_Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[JP_Sales]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>JP_Sales</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other_Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other_Sales]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Other_Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Global_Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Global_Sales]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Global_Sales</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Critic_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Critic_Name]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Critic_Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LDA_RDK' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review_Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Review_Date]</local-name>
            <parent-name>[metacritic_reviews-vgsales-combined.csv]</parent-name>
            <remote-alias>Review_Date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Python with input' datatype='real' name='[Calculation_991073444452282370]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import pandas as pd&#13;&#10;import numpy as np&#13;&#10;import seaborn as sns&#13;&#10;import matplotlib.pyplot as plt&#13;&#10;from sklearn.feature_extraction.text import CountVectorizer&#13;&#10;from sklearn import feature_extraction, linear_model, model_selection, preprocessing&#13;&#10;from sklearn.metrics import accuracy_score&#13;&#10;from sklearn.model_selection import train_test_split&#13;&#10;from sklearn.feature_extraction.text import TfidfTransformer&#13;&#10;from sklearn.pipeline import Pipeline&#13;&#10;&#13;&#10;from sklearn.naive_bayes import GaussianNB&#13;&#10;from sklearn.naive_bayes import BernoulliNB&#13;&#10;from sklearn.naive_bayes import MultinomialNB&#13;&#10;from sklearn.tree import DecisionTreeClassifier&#13;&#10;from sklearn.ensemble import RandomForestClassifier&#13;&#10;&#13;&#10;from sklearn.preprocessing import LabelEncoder&#13;&#10;&#13;&#10;from sklearn.metrics import accuracy_score, confusion_matrix, classification_report&#13;&#10;&#13;&#10;review_df = pd.read_csv(&apos;C:/Users/Andreas Heick Laptop/Documents/VisualStudio Projects/SOFT - 2 Semester/BI/BI-Exam/metacritic_critic_reviews.csv&apos;).tail(10000)&#13;&#10;review_df=review_df[~review_df.isin([np.nan, np.inf, -np.inf]).any(1)]&#13;&#10;&#13;&#10;Y = review_df.score&#13;&#10;X = review_df.review&#13;&#10;test_size = 0.20&#13;&#10;random_state = 200&#13;&#10;&#13;&#10;# Creating and training data&#13;&#10;x_train,x_test,y_train,y_test = train_test_split(X, Y, test_size=test_size, random_state=random_state)&#13;&#10;&#13;&#10;pipe = Pipeline([(&apos;vect&apos;, CountVectorizer()),&#13;&#10;                 (&apos;tfidf&apos;, TfidfTransformer()),&#13;&#10;                 (&apos;model&apos;, DecisionTreeClassifier())])&#13;&#10;&#13;&#10;model = pipe.fit(x_train, y_train)&#13;&#10;&#13;&#10;prediction = model.predict(_arg1)&#13;&#10;&#13;&#10;return prediction.tolist()&#13;&#10;&quot;, STR([Parameters].[Parameter 1]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Python Plot' datatype='real' name='[Calculation_991073444466683907]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import pandas as pd&#13;&#10;import numpy as np&#13;&#10;import seaborn as sns&#13;&#10;import matplotlib.pyplot as plt&#13;&#10;&#13;&#10;review_df = pd.read_csv(&apos;C:/Users/Andreas Heick Laptop/Documents/VisualStudio Projects/SOFT - 2 Semester/BI/BI-Exam/metacritic_critic_reviews.csv&apos;).tail(1000)&#13;&#10;review_df=review_df[~review_df.isin([np.nan, np.inf, -np.inf]).any(1)]&#13;&#10;&#13;&#10;# plot platform for each review&#13;&#10;plt.figure(figsize=(15,5))&#13;&#10;sns.countplot(&apos;platform&apos;, data=review_df)&#13;&#10;return plt.show()&#13;&#10;&quot;, STR([Parameters].[Parameter 1]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[EU_Sales]' role='measure' type='quantitative' />
      <column datatype='real' name='[Global_Sales]' role='measure' type='quantitative' />
      <column datatype='real' name='[JP_Sales]' role='measure' type='quantitative' />
      <column datatype='real' name='[NA_Sales]' role='measure' type='quantitative' />
      <column datatype='real' name='[Other_Sales]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Release_Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='metacritic_reviews-vgsales-combined.csv' datatype='table' name='[__tableau_internal_object_id__].[metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429]' role='measure' type='quantitative' />
      <column-instance column='[EU_Sales]' derivation='Attribute' name='[attr:EU_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Global_Sales]' derivation='Attribute' name='[attr:Global_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JP_Sales]' derivation='Attribute' name='[attr:JP_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NA_Sales]' derivation='Attribute' name='[attr:NA_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other_Sales]' derivation='Attribute' name='[attr:Other_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EU_Sales]' derivation='Avg' name='[avg:EU_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Global_Sales]' derivation='Avg' name='[avg:Global_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JP_Sales]' derivation='Avg' name='[avg:JP_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NA_Sales]' derivation='Avg' name='[avg:NA_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other_Sales]' derivation='Avg' name='[avg:Other_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Global_Sales]' derivation='None' name='[none:Global_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EU_Sales]' derivation='Sum' name='[sum:EU_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Global_Sales]' derivation='Sum' name='[sum:Global_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[JP_Sales]' derivation='Sum' name='[sum:JP_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NA_Sales]' derivation='Sum' name='[sum:NA_Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other_Sales]' derivation='Sum' name='[sum:Other_Sales:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[attr:EU_Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:EU_Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:EU_Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[attr:Other_Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Other_Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:Other_Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[attr:NA_Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:NA_Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:NA_Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[attr:JP_Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:JP_Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:JP_Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[attr:Global_Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Global_Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:Global_Sales:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Denmark&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Input' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;This game is very good and brilliant&quot;'>
          <calculation class='tableau' formula='&quot;This game is very good and brilliant&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='metacritic_reviews-vgsales-combined.csv' id='metacritic_reviews-vgsales-combined.csv_B7A58726A052408B82746DD627B81429'>
            <properties context=''>
              <relation connection='textscan.0fx6kn705jz9rc1485dyu05w920h' name='metacritic_reviews-vgsales-combined.csv' table='[metacritic_reviews-vgsales-combined#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='da_DK' separator=';'>
                  <column datatype='integer' name='Sales_Rank' ordinal='0' />
                  <column datatype='string' name='Game' ordinal='1' />
                  <column datatype='string' name='Platform' ordinal='2' />
                  <column datatype='integer' name='Release_Year' ordinal='3' />
                  <column datatype='string' name='Genre' ordinal='4' />
                  <column datatype='string' name='Publisher' ordinal='5' />
                  <column datatype='real' name='NA_Sales' ordinal='6' />
                  <column datatype='real' name='EU_Sales' ordinal='7' />
                  <column datatype='real' name='JP_Sales' ordinal='8' />
                  <column datatype='real' name='Other_Sales' ordinal='9' />
                  <column datatype='real' name='Global_Sales' ordinal='10' />
                  <column datatype='string' name='Critic_Name' ordinal='11' />
                  <column datatype='integer' name='Score' ordinal='12' />
                  <column datatype='date' name='Review_Date' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Input' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;This game is very good and brilliant&quot;'>
        <calculation class='tableau' formula='&quot;This game is very good and brilliant&quot;' />
        <members>
          <member value='&quot;Test&quot;' />
          <member value='&quot;This game is very good and brilliant&quot;' />
          <member value='&quot;Assignment 3: Integrating AI&quot;' />
          <member value='&quot;Instead of being fun it was boring lacking cool features&quot;' />
          <member value='&quot;no no bad bad&quot;' />
        </members>
      </column>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Critic/Avg. Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='metacritic_reviews-vgsales-combined' name='federated.1ghzhzy025up6h10nf53y0heed5n' />
          </datasources>
          <datasource-dependencies datasource='federated.1ghzhzy025up6h10nf53y0heed5n'>
            <column datatype='string' name='[Critic_Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Count' name='[cnt:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Critic_Name]' derivation='None' name='[none:Critic_Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ghzhzy025up6h10nf53y0heed5n].[cnt:Score:qk]' included-values='in-range'>
            <min>50</min>
            <max>546</max>
          </filter>
          <manual-sort column='[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Critic_Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;The Daily Dot&quot;</bucket>
              <bucket>&quot;Time&quot;</bucket>
              <bucket>&quot;DualShockers&quot;</bucket>
              <bucket>&quot;Switch Brasil&quot;</bucket>
              <bucket>&quot;Gamers.at&quot;</bucket>
              <bucket>&quot;GamePro Germany&quot;</bucket>
              <bucket>&quot;Pelit (Finland)&quot;</bucket>
              <bucket>&quot;Softpedia&quot;</bucket>
              <bucket>&quot;Hobby Consolas&quot;</bucket>
              <bucket>&quot;Merlin&apos;in Kazanı (Turkey)&quot;</bucket>
              <bucket>&quot;PC Master (Greece)&quot;</bucket>
              <bucket>&quot;Ragequit.gr&quot;</bucket>
              <bucket>&quot;MondoXbox&quot;</bucket>
              <bucket>&quot;Gamers&apos; Temple&quot;</bucket>
              <bucket>&quot;Forbes&quot;</bucket>
              <bucket>&quot;Game Chronicles&quot;</bucket>
              <bucket>&quot;PC Games&quot;</bucket>
              <bucket>&quot;Power Unlimited&quot;</bucket>
              <bucket>&quot;Hooked Gamers&quot;</bucket>
              <bucket>&quot;Armchair Empire&quot;</bucket>
              <bucket>&quot;Impulsegamer&quot;</bucket>
              <bucket>&quot;AusGamers&quot;</bucket>
              <bucket>&quot;GamesVillage.it&quot;</bucket>
              <bucket>&quot;Ten Ton Hammer&quot;</bucket>
              <bucket>&quot;Game Over Online&quot;</bucket>
              <bucket>&quot;FiringSquad&quot;</bucket>
              <bucket>&quot;Sporting News&quot;</bucket>
              <bucket>&quot;GamingXP&quot;</bucket>
              <bucket>&quot;GameStar&quot;</bucket>
              <bucket>&quot;MMORPG.com&quot;</bucket>
              <bucket>&quot;CPUGamer&quot;</bucket>
              <bucket>&quot;AtomicGamer&quot;</bucket>
              <bucket>&quot;Arcade Sushi&quot;</bucket>
              <bucket>&quot;RPG Fan&quot;</bucket>
              <bucket>&quot;Meristation&quot;</bucket>
              <bucket>&quot;PC Format&quot;</bucket>
              <bucket>&quot;GameCrate&quot;</bucket>
              <bucket>&quot;3DJuegos&quot;</bucket>
              <bucket>&quot;GamingTrend&quot;</bucket>
              <bucket>&quot;Gaming Nexus&quot;</bucket>
              <bucket>&quot;Computer Games Online RO&quot;</bucket>
              <bucket>&quot;LaPS4&quot;</bucket>
              <bucket>&quot;GamesBeat&quot;</bucket>
              <bucket>&quot;Digital Chumps&quot;</bucket>
              <bucket>&quot;IGN Italia&quot;</bucket>
              <bucket>&quot;Digitally Downloaded&quot;</bucket>
              <bucket>&quot;Game Debate&quot;</bucket>
              <bucket>&quot;Vandal&quot;</bucket>
              <bucket>&quot;MEGamers&quot;</bucket>
              <bucket>&quot;Trusted Reviews&quot;</bucket>
              <bucket>&quot;GRYOnline.pl&quot;</bucket>
              <bucket>&quot;PSX Extreme&quot;</bucket>
              <bucket>&quot;Telegraph&quot;</bucket>
              <bucket>&quot;PLAY! Zine&quot;</bucket>
              <bucket>&quot;Cheat Code Central&quot;</bucket>
              <bucket>&quot;Gamer Limit&quot;</bucket>
              <bucket>&quot;Guardian&quot;</bucket>
              <bucket>&quot;Eurogamer Poland&quot;</bucket>
              <bucket>&quot;PSX-Sense.nl&quot;</bucket>
              <bucket>&quot;Gaming Target&quot;</bucket>
              <bucket>&quot;Gamestyle&quot;</bucket>
              <bucket>&quot;Atomix&quot;</bucket>
              <bucket>&quot;Multiplayer.it&quot;</bucket>
              <bucket>&quot;GameTrailers&quot;</bucket>
              <bucket>&quot;Xbox Achievements&quot;</bucket>
              <bucket>&quot;The Games Machine&quot;</bucket>
              <bucket>&quot;NZGamer&quot;</bucket>
              <bucket>&quot;ICXM&quot;</bucket>
              <bucket>&quot;PC Games (Russia)&quot;</bucket>
              <bucket>&quot;ActionTrip&quot;</bucket>
              <bucket>&quot;USgamer&quot;</bucket>
              <bucket>&quot;The Vita Lounge&quot;</bucket>
              <bucket>&quot;Post Arcade (National Post)&quot;</bucket>
              <bucket>&quot;Machinima&quot;</bucket>
              <bucket>&quot;Game Informer&quot;</bucket>
              <bucket>&quot;IGN Spain&quot;</bucket>
              <bucket>&quot;God is a Geek&quot;</bucket>
              <bucket>&quot;Areajugones&quot;</bucket>
              <bucket>&quot;COGconnected&quot;</bucket>
              <bucket>&quot;TrueAchievements&quot;</bucket>
              <bucket>&quot;Worth Playing&quot;</bucket>
              <bucket>&quot;IBTimes UK&quot;</bucket>
              <bucket>&quot;Windows Central&quot;</bucket>
              <bucket>&quot;PlayStation Universe&quot;</bucket>
              <bucket>&quot;LevelUp&quot;</bucket>
              <bucket>&quot;Gaming Age&quot;</bucket>
              <bucket>&quot;The Escapist&quot;</bucket>
              <bucket>&quot;Easy Allies&quot;</bucket>
              <bucket>&quot;Everyeye.it&quot;</bucket>
              <bucket>&quot;Yahoo!&quot;</bucket>
              <bucket>&quot;Game World Navigator Magazine&quot;</bucket>
              <bucket>&quot;N-Europe&quot;</bucket>
              <bucket>&quot;PSNStores&quot;</bucket>
              <bucket>&quot;Attack of the Fanboy&quot;</bucket>
              <bucket>&quot;PCGamesN&quot;</bucket>
              <bucket>&quot;ZTGD&quot;</bucket>
              <bucket>&quot;InsideGamer.nl&quot;</bucket>
              <bucket>&quot;Gameplanet&quot;</bucket>
              <bucket>&quot;Examiner&quot;</bucket>
              <bucket>&quot;GameWatcher&quot;</bucket>
              <bucket>&quot;GameGrin&quot;</bucket>
              <bucket>&quot;NF Magazine&quot;</bucket>
              <bucket>&quot;Critical Hit&quot;</bucket>
              <bucket>&quot;Eurogamer Spain&quot;</bucket>
              <bucket>&quot;Nintendojo&quot;</bucket>
              <bucket>&quot;GameOver.gr&quot;</bucket>
              <bucket>&quot;Games Master UK&quot;</bucket>
              <bucket>&quot;DarkStation&quot;</bucket>
              <bucket>&quot;IGN Denmark&quot;</bucket>
              <bucket>&quot;XGN&quot;</bucket>
              <bucket>&quot;Wccftech&quot;</bucket>
              <bucket>&quot;SpazioGames&quot;</bucket>
              <bucket>&quot;Play UK&quot;</bucket>
              <bucket>&quot;NowGamer&quot;</bucket>
              <bucket>&quot;Toronto Sun&quot;</bucket>
              <bucket>&quot;Dealspwn&quot;</bucket>
              <bucket>&quot;Twinfinite&quot;</bucket>
              <bucket>&quot;PC Gamer&quot;</bucket>
              <bucket>&quot;Adventure Gamers&quot;</bucket>
              <bucket>&quot;CGMagazine&quot;</bucket>
              <bucket>&quot;RPG Site&quot;</bucket>
              <bucket>&quot;TotalPlayStation&quot;</bucket>
              <bucket>&quot;M3&quot;</bucket>
              <bucket>&quot;Playstation Official Magazine Australia&quot;</bucket>
              <bucket>&quot;Eurogamer Italy&quot;</bucket>
              <bucket>&quot;Game Rant&quot;</bucket>
              <bucket>&quot;Official Nintendo Magazine UK&quot;</bucket>
              <bucket>&quot;Eurogamer Germany&quot;</bucket>
              <bucket>&quot;JeuxActu&quot;</bucket>
              <bucket>&quot;Brash Games&quot;</bucket>
              <bucket>&quot;Cubed3&quot;</bucket>
              <bucket>&quot;Gamer.nl&quot;</bucket>
              <bucket>&quot;EGM&quot;</bucket>
              <bucket>&quot;Hyper Magazine&quot;</bucket>
              <bucket>&quot;CD-Action&quot;</bucket>
              <bucket>&quot;Gamereactor Denmark&quot;</bucket>
              <bucket>&quot;Digital Trends&quot;</bucket>
              <bucket>&quot;Gamers\\&apos; Temple&quot;</bucket>
              <bucket>&quot;NintendoWorldReport&quot;</bucket>
              <bucket>&quot;Bit-Gamer&quot;</bucket>
              <bucket>&quot;The A.V. Club&quot;</bucket>
              <bucket>&quot;Hardcore Gamer&quot;</bucket>
              <bucket>&quot;PC Invasion&quot;</bucket>
              <bucket>&quot;The Digital Fix&quot;</bucket>
              <bucket>&quot;Nintendo Life&quot;</bucket>
              <bucket>&quot;DarkZero&quot;</bucket>
              <bucket>&quot;PlayStation LifeStyle&quot;</bucket>
              <bucket>&quot;CalmDownTom&quot;</bucket>
              <bucket>&quot;Games.cz&quot;</bucket>
              <bucket>&quot;GamingExcellence&quot;</bucket>
              <bucket>&quot;GameFront&quot;</bucket>
              <bucket>&quot;Digital Spy&quot;</bucket>
              <bucket>&quot;4Players.de&quot;</bucket>
              <bucket>&quot;Modojo&quot;</bucket>
              <bucket>&quot;New York Daily News&quot;</bucket>
              <bucket>&quot;1UP&quot;</bucket>
              <bucket>&quot;Eurogamer Portugal&quot;</bucket>
              <bucket>&quot;VideoGamer&quot;</bucket>
              <bucket>&quot;LEVEL (Czech Republic)&quot;</bucket>
              <bucket>&quot;GameSpy&quot;</bucket>
              <bucket>&quot;Da Gameboyz&quot;</bucket>
              <bucket>&quot;Game Revolution&quot;</bucket>
              <bucket>&quot;Polygon&quot;</bucket>
              <bucket>&quot;Official PlayStation Magazine Benelux&quot;</bucket>
              <bucket>&quot;Nintendo Enthusiast&quot;</bucket>
              <bucket>&quot;Pocket Gamer UK&quot;</bucket>
              <bucket>&quot;GameFocus&quot;</bucket>
              <bucket>&quot;GameSpew&quot;</bucket>
              <bucket>&quot;UGO&quot;</bucket>
              <bucket>&quot;The Globe and Mail (Toronto)&quot;</bucket>
              <bucket>&quot;G4 TV&quot;</bucket>
              <bucket>&quot;Eurogamer Sweden&quot;</bucket>
              <bucket>&quot;TheSixthAxis&quot;</bucket>
              <bucket>&quot;Official Xbox Magazine UK&quot;</bucket>
              <bucket>&quot;PC PowerPlay&quot;</bucket>
              <bucket>&quot;We Got This Covered&quot;</bucket>
              <bucket>&quot;Nintendo Power&quot;</bucket>
              <bucket>&quot;IGN Sweden&quot;</bucket>
              <bucket>&quot;Destructoid&quot;</bucket>
              <bucket>&quot;Joystiq&quot;</bucket>
              <bucket>&quot;GamesRadar+&quot;</bucket>
              <bucket>&quot;PC Gamer UK&quot;</bucket>
              <bucket>&quot;PSFocus&quot;</bucket>
              <bucket>&quot;Eurogamer&quot;</bucket>
              <bucket>&quot;Gamereactor Sweden&quot;</bucket>
              <bucket>&quot;Playstation Official Magazine UK&quot;</bucket>
              <bucket>&quot;PlayStation Country&quot;</bucket>
              <bucket>&quot;Shacknews&quot;</bucket>
              <bucket>&quot;Gamer.no&quot;</bucket>
              <bucket>&quot;Thunderbolt&quot;</bucket>
              <bucket>&quot;PCWorld&quot;</bucket>
              <bucket>&quot;FNintendo&quot;</bucket>
              <bucket>&quot;Playstation: The Official Magazine (US)&quot;</bucket>
              <bucket>&quot;GamePro&quot;</bucket>
              <bucket>&quot;Pure Xbox&quot;</bucket>
              <bucket>&quot;Push Square&quot;</bucket>
              <bucket>&quot;PALGN&quot;</bucket>
              <bucket>&quot;Gameblog.fr&quot;</bucket>
              <bucket>&quot;D+PAD Magazine&quot;</bucket>
              <bucket>&quot;Washington Post&quot;</bucket>
              <bucket>&quot;High-Def Digest&quot;</bucket>
              <bucket>&quot;PSM3 Magazine UK&quot;</bucket>
              <bucket>&quot;X-ONE Magazine UK&quot;</bucket>
              <bucket>&quot;GameSpot&quot;</bucket>
              <bucket>&quot;Level7.nu&quot;</bucket>
              <bucket>&quot;games(TM)&quot;</bucket>
              <bucket>&quot;Riot Pixels&quot;</bucket>
              <bucket>&quot;GameCritics&quot;</bucket>
              <bucket>&quot;Giant Bomb&quot;</bucket>
              <bucket>&quot;Edge Magazine&quot;</bucket>
              <bucket>&quot;The Jimquisition&quot;</bucket>
              <bucket>&quot;BigPond GameArena&quot;</bucket>
              <bucket>&quot;RPGamer&quot;</bucket>
              <bucket>&quot;Absolute Games&quot;</bucket>
              <bucket>&quot;Kill Screen&quot;</bucket>
              <bucket>&quot;GameShark&quot;</bucket>
              <bucket>&quot;Official Xbox Magazine&quot;</bucket>
              <bucket>&quot;Stevivor&quot;</bucket>
              <bucket>&quot;Slant Magazine&quot;</bucket>
              <bucket>&quot;IncGamers&quot;</bucket>
              <bucket>&quot;Nintendo Gamer&quot;</bucket>
              <bucket>&quot;GamerNode&quot;</bucket>
              <bucket>&quot;Quarter to Three&quot;</bucket>
              <bucket>&quot;Metro GameCentral&quot;</bucket>
              <bucket>&quot;Gamekult&quot;</bucket>
              <bucket>&quot;Vgames&quot;</bucket>
              <bucket>&quot;Computer and Video Games&quot;</bucket>
              <bucket>&quot;YouGamers&quot;</bucket>
              <bucket>&quot;Cynamite&quot;</bucket>
              <bucket>&quot;TrueGaming&quot;</bucket>
              <bucket>&quot;Videogameszone.de&quot;</bucket>
              <bucket>&quot;RealGamer&quot;</bucket>
              <bucket>&quot;Total Video Games&quot;</bucket>
              <bucket>&quot;IGN UK&quot;</bucket>
              <bucket>&quot;Wired&quot;</bucket>
              <bucket>&quot;Video Chums&quot;</bucket>
              <bucket>&quot;DailyGame&quot;</bucket>
              <bucket>&quot;New Game Network&quot;</bucket>
              <bucket>&quot;XboxAddict&quot;</bucket>
              <bucket>&quot;AceGamez&quot;</bucket>
              <bucket>&quot;The Overpowered Noobs&quot;</bucket>
              <bucket>&quot;BaziCenter&quot;</bucket>
              <bucket>&quot;GameZone&quot;</bucket>
              <bucket>&quot;App Trigger&quot;</bucket>
              <bucket>&quot;My Gamer&quot;</bucket>
              <bucket>&quot;Gamer&apos;s Hell&quot;</bucket>
              <bucket>&quot;IGN&quot;</bucket>
              <bucket>&quot;Let&apos;s Play Video Games&quot;</bucket>
              <bucket>&quot;Extreme Gamer&quot;</bucket>
              <bucket>&quot;GameSpace&quot;</bucket>
              <bucket>&quot;Vooks&quot;</bucket>
              <bucket>&quot;IGN AU&quot;</bucket>
              <bucket>&quot;Play.tm&quot;</bucket>
              <bucket>&quot;Pocket Gamer France&quot;</bucket>
              <bucket>&quot;XBLA Fans&quot;</bucket>
              <bucket>&quot;Video Game Talk&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk]</column>
            <column>[federated.1ghzhzy025up6h10nf53y0heed5n].[cnt:Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[cnt:Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Critic_Name:nk]</rows>
        <cols>([federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk] + [federated.1ghzhzy025up6h10nf53y0heed5n].[cnt:Score:qk])</cols>
      </table>
      <simple-id uuid='{C1FF952E-76A6-459E-8A9E-8439D2671C63}' />
    </worksheet>
    <worksheet name='Python ML'>
      <table>
        <view>
          <datasources>
            <datasource caption='metacritic_reviews-vgsales-combined' name='federated.1ghzhzy025up6h10nf53y0heed5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Input' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;This game is very good and brilliant&quot;'>
              <calculation class='tableau' formula='&quot;This game is very good and brilliant&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ghzhzy025up6h10nf53y0heed5n'>
            <column caption='Python with input' datatype='real' name='[Calculation_991073444452282370]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import pandas as pd&#13;&#10;import numpy as np&#13;&#10;import seaborn as sns&#13;&#10;import matplotlib.pyplot as plt&#13;&#10;from sklearn.feature_extraction.text import CountVectorizer&#13;&#10;from sklearn import feature_extraction, linear_model, model_selection, preprocessing&#13;&#10;from sklearn.metrics import accuracy_score&#13;&#10;from sklearn.model_selection import train_test_split&#13;&#10;from sklearn.feature_extraction.text import TfidfTransformer&#13;&#10;from sklearn.pipeline import Pipeline&#13;&#10;&#13;&#10;from sklearn.naive_bayes import GaussianNB&#13;&#10;from sklearn.naive_bayes import BernoulliNB&#13;&#10;from sklearn.naive_bayes import MultinomialNB&#13;&#10;from sklearn.tree import DecisionTreeClassifier&#13;&#10;from sklearn.ensemble import RandomForestClassifier&#13;&#10;&#13;&#10;from sklearn.preprocessing import LabelEncoder&#13;&#10;&#13;&#10;from sklearn.metrics import accuracy_score, confusion_matrix, classification_report&#13;&#10;&#13;&#10;review_df = pd.read_csv(&apos;C:/Users/Andreas Heick Laptop/Documents/VisualStudio Projects/SOFT - 2 Semester/BI/BI-Exam/metacritic_critic_reviews.csv&apos;).tail(10000)&#13;&#10;review_df=review_df[~review_df.isin([np.nan, np.inf, -np.inf]).any(1)]&#13;&#10;&#13;&#10;Y = review_df.score&#13;&#10;X = review_df.review&#13;&#10;test_size = 0.20&#13;&#10;random_state = 200&#13;&#10;&#13;&#10;# Creating and training data&#13;&#10;x_train,x_test,y_train,y_test = train_test_split(X, Y, test_size=test_size, random_state=random_state)&#13;&#10;&#13;&#10;pipe = Pipeline([(&apos;vect&apos;, CountVectorizer()),&#13;&#10;                 (&apos;tfidf&apos;, TfidfTransformer()),&#13;&#10;                 (&apos;model&apos;, DecisionTreeClassifier())])&#13;&#10;&#13;&#10;model = pipe.fit(x_train, y_train)&#13;&#10;&#13;&#10;prediction = model.predict(_arg1)&#13;&#10;&#13;&#10;return prediction.tolist()&#13;&#10;&quot;, STR([Parameters].[Parameter 1]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_991073444452282370]' derivation='User' name='[usr:Calculation_991073444452282370:nk]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ghzhzy025up6h10nf53y0heed5n].[usr:Calculation_991073444452282370:nk]' value='197' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Parameters].[Parameter 1]' value='648' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ghzhzy025up6h10nf53y0heed5n].[usr:Calculation_991073444452282370:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Parameters].[Parameter 1]</rows>
        <cols>[federated.1ghzhzy025up6h10nf53y0heed5n].[usr:Calculation_991073444452282370:nk]</cols>
      </table>
      <simple-id uuid='{1C6C742A-3299-4FF8-986A-DF0475BFB557}' />
    </worksheet>
    <worksheet name='Python Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='metacritic_reviews-vgsales-combined' name='federated.1ghzhzy025up6h10nf53y0heed5n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Input' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;This game is very good and brilliant&quot;'>
              <calculation class='tableau' formula='&quot;This game is very good and brilliant&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ghzhzy025up6h10nf53y0heed5n'>
            <column caption='Python Plot' datatype='real' name='[Calculation_991073444466683907]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;import pandas as pd&#13;&#10;import numpy as np&#13;&#10;import seaborn as sns&#13;&#10;import matplotlib.pyplot as plt&#13;&#10;&#13;&#10;review_df = pd.read_csv(&apos;C:/Users/Andreas Heick Laptop/Documents/VisualStudio Projects/SOFT - 2 Semester/BI/BI-Exam/metacritic_critic_reviews.csv&apos;).tail(1000)&#13;&#10;review_df=review_df[~review_df.isin([np.nan, np.inf, -np.inf]).any(1)]&#13;&#10;&#13;&#10;# plot platform for each review&#13;&#10;plt.figure(figsize=(15,5))&#13;&#10;sns.countplot(&apos;platform&apos;, data=review_df)&#13;&#10;return plt.show()&#13;&#10;&quot;, STR([Parameters].[Parameter 1]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_991073444466683907]' derivation='User' name='[usr:Calculation_991073444466683907:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ghzhzy025up6h10nf53y0heed5n].[usr:Calculation_991073444466683907:qk]</cols>
      </table>
      <simple-id uuid='{CB658198-14E4-48BF-B130-126966A00DB6}' />
    </worksheet>
    <worksheet name='Scores effect on global sales for a game'>
      <table>
        <view>
          <datasources>
            <datasource caption='metacritic_reviews-vgsales-combined' name='federated.1ghzhzy025up6h10nf53y0heed5n' />
          </datasources>
          <datasource-dependencies datasource='federated.1ghzhzy025up6h10nf53y0heed5n'>
            <column datatype='string' name='[Game]' role='dimension' type='nominal' />
            <column datatype='real' name='[Global_Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column-instance column='[Global_Sales]' derivation='Avg' name='[avg:Global_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Game]' derivation='None' name='[none:Game:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]' direction='DESC' using='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]</rows>
        <cols>([federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk] + [federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk])</cols>
      </table>
      <simple-id uuid='{100FC2E0-B61E-4DF2-B1C7-B0966B6E8F07}' />
    </worksheet>
    <worksheet name='Scores effect on global sales pr. publisher/game'>
      <table>
        <view>
          <datasources>
            <datasource caption='metacritic_reviews-vgsales-combined' name='federated.1ghzhzy025up6h10nf53y0heed5n' />
          </datasources>
          <datasource-dependencies datasource='federated.1ghzhzy025up6h10nf53y0heed5n'>
            <column datatype='string' name='[Game]' role='dimension' type='nominal' />
            <column datatype='real' name='[Global_Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Release_Year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Score]' role='measure' type='quantitative' />
            <column-instance column='[Global_Sales]' derivation='Avg' name='[avg:Global_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Avg' name='[avg:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Game]' derivation='None' name='[none:Game:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
            <column-instance column='[Release_Year]' derivation='None' name='[none:Release_Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Global_Sales]' derivation='Sum' name='[sum:Global_Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]'>
            <groupfilter count='150' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Global_Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Game:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Publisher:nk]' direction='DESC' using='[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:Global_Sales:qk]' />
          <slices>
            <column>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ghzhzy025up6h10nf53y0heed5n].[none:Publisher:nk] / ([federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk] / [federated.1ghzhzy025up6h10nf53y0heed5n].[none:Release_Year:ok]))</rows>
        <cols>([federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk] + [federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Score:qk])</cols>
      </table>
      <simple-id uuid='{B2D242EA-ED5A-46FF-B05B-80AFEE86E867}' />
    </worksheet>
    <worksheet name='Sum of Sales for EU/NA pr. genre'>
      <table>
        <view>
          <datasources>
            <datasource caption='metacritic_reviews-vgsales-combined' name='federated.1ghzhzy025up6h10nf53y0heed5n' />
          </datasources>
          <datasource-dependencies datasource='federated.1ghzhzy025up6h10nf53y0heed5n'>
            <column datatype='real' name='[EU_Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Genre]' role='dimension' type='nominal' />
            <column datatype='real' name='[NA_Sales]' role='measure' type='quantitative' />
            <column-instance column='[NA_Sales]' derivation='Avg' name='[avg:NA_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Genre]' derivation='None' name='[none:Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[EU_Sales]' derivation='Sum' name='[sum:EU_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NA_Sales]' derivation='Sum' name='[sum:NA_Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ghzhzy025up6h10nf53y0heed5n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:EU_Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:NA_Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ghzhzy025up6h10nf53y0heed5n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[sum:EU_Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:NA_Sales:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ghzhzy025up6h10nf53y0heed5n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ghzhzy025up6h10nf53y0heed5n].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ghzhzy025up6h10nf53y0heed5n].[Multiple Values]</rows>
        <cols>([federated.1ghzhzy025up6h10nf53y0heed5n].[none:Genre:nk] / [federated.1ghzhzy025up6h10nf53y0heed5n].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{4D026431-6ABE-42B7-9B4E-5DADD99ADD8D}' />
    </worksheet>
    <worksheet name='Top 10 Global Game Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='metacritic_reviews-vgsales-combined' name='federated.1ghzhzy025up6h10nf53y0heed5n' />
          </datasources>
          <datasource-dependencies datasource='federated.1ghzhzy025up6h10nf53y0heed5n'>
            <column datatype='string' name='[Game]' role='dimension' type='nominal' />
            <column datatype='real' name='[Global_Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Publisher]' role='dimension' type='nominal' />
            <column-instance column='[Global_Sales]' derivation='Avg' name='[avg:Global_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Game]' derivation='None' name='[none:Game:nk]' pivot='key' type='nominal' />
            <column-instance column='[Publisher]' derivation='None' name='[none:Publisher:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Global_Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Game:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]' direction='DESC' measure-to-sort-by='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk] / [federated.1ghzhzy025up6h10nf53y0heed5n].[none:Publisher:nk])</rows>
        <cols>[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk]</cols>
      </table>
      <simple-id uuid='{A9C99BD7-5AA8-4B2D-8AFD-D69A846520DE}' />
    </worksheet>
    <worksheet name='Top 10 Global Sales pr. platform'>
      <table>
        <view>
          <datasources>
            <datasource caption='metacritic_reviews-vgsales-combined' name='federated.1ghzhzy025up6h10nf53y0heed5n' />
          </datasources>
          <datasource-dependencies datasource='federated.1ghzhzy025up6h10nf53y0heed5n'>
            <column datatype='real' name='[EU_Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Global_Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[JP_Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[NA_Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Other_Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Platform]' role='dimension' type='nominal' />
            <column-instance column='[EU_Sales]' derivation='Avg' name='[avg:EU_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Global_Sales]' derivation='Avg' name='[avg:Global_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[JP_Sales]' derivation='Avg' name='[avg:JP_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NA_Sales]' derivation='Avg' name='[avg:NA_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other_Sales]' derivation='Avg' name='[avg:Other_Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Platform]' derivation='None' name='[none:Platform:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Platform:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;WiiU&quot;</bucket>
              <bucket>&quot;PS4&quot;</bucket>
              <bucket>&quot;3DS&quot;</bucket>
              <bucket>&quot;XOne&quot;</bucket>
              <bucket>&quot;PC&quot;</bucket>
              <bucket>&quot;PSV&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:EU_Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:NA_Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:JP_Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Other_Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Platform:nk]</rows>
        <cols>([federated.1ghzhzy025up6h10nf53y0heed5n].[avg:EU_Sales:qk] + ([federated.1ghzhzy025up6h10nf53y0heed5n].[avg:NA_Sales:qk] + ([federated.1ghzhzy025up6h10nf53y0heed5n].[avg:JP_Sales:qk] + ([federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Other_Sales:qk] + [federated.1ghzhzy025up6h10nf53y0heed5n].[avg:Global_Sales:qk]))))</cols>
      </table>
      <simple-id uuid='{C18D686A-AB30-43A2-9DE6-06A532F70A95}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Critic/Avg. Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Critic_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1D81E78-C327-471E-874B-6A5AC5BE3E27}' />
    </window>
    <window class='worksheet' name='Top 10 Global Game Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Platform:nk]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Publisher:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1B00A97-7CCA-4C90-9E9E-B92F1937AF07}' />
    </window>
    <window class='worksheet' name='Top 10 Global Sales pr. platform'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Platform:nk]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Publisher:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07522183-DC55-497E-9E30-C4C865C76875}' />
    </window>
    <window class='worksheet' name='Scores effect on global sales for a game'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66AC273C-71D2-4B84-BD0B-90FFB0BF74F0}' />
    </window>
    <window class='worksheet' name='Scores effect on global sales pr. publisher/game'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Platform:nk]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Publisher:nk]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Release_Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49E933B8-CDBE-4F88-8B6F-1BDC0AF47F8D}' />
    </window>
    <window class='worksheet' name='Sum of Sales for EU/NA pr. genre'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ghzhzy025up6h10nf53y0heed5n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[:Measure Names]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[none:Game:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA4D678F-9236-4B1B-82FB-F25187EE4138}' />
    </window>
    <window class='worksheet' name='Python ML'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ghzhzy025up6h10nf53y0heed5n].[usr:Calculation_991073444452282370:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1ghzhzy025up6h10nf53y0heed5n].[usr:Calculation_991073444452282370:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17FD094E-A08E-4AEC-80F4-1D39291407DE}' />
    </window>
    <window class='worksheet' maximized='true' name='Python Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F85D8AA5-1335-48AD-B433-C5B6B13DADEE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Critic/Avg. Score' width='192'>
      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
    </thumbnail>
    <thumbnail height='64' name='Python ML' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Python Plot' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scores effect on global sales for a game' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scores effect on global sales pr. publisher/game' width='192'>
      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
      bRUTNSigZe8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sum of Sales for EU/NA pr. genre' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Global Game Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Global Sales pr. platform' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
